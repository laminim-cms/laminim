<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\Query; use Lkt\Factory\Instantiator\Instantiator; class GeneratedMultimediaItem extends \Lkt\Factory\Instantiator\Instances\AbstractInstance { const GENERATED_TYPE = 'lmm-multimedia'; const COMPONENT = 'lmm-multimedia'; public function getId() :int { return $this->_getIntegerVal('id'); } public function hasId() :bool { return $this->_hasIntegerVal('id'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setId(int $id) { $this->_setIntegerVal('id', $id); return $this; } public function getCreatedAt(): ?\Carbon\Carbon { return $this->_getDateTimeVal('createdAt'); } public function getCreatedAtFormatted(string $format = null) :string { return $this->_getDateTimeFormattedVal('createdAt', $format); } public function getCreatedAtIntlFormatted(string $format = null) :string { return $this->_getDateTimeFormattedIntlVal('createdAt', $format); } public function hasCreatedAt() :bool { return $this->_hasDateTimeVal('createdAt'); } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setCreatedAt($createdAt) { $this->_setDateTimeVal('createdAt', $createdAt); return $this; } public function getCreatedById(): int { return $this->_getIntegerVal('createdById'); } public function hasCreatedById() :bool { return $this->_hasIntegerVal('createdById'); } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setCreatedById(int $createdById) { $this->_setIntegerVal('createdById', $createdById); return $this; } /** @return \LaminimCMS\Instances\User*/ public function getCreatedBy() :?\LaminimCMS\Instances\User { return $this->_getForeignVal('lmm-user', $this->getCreatedById()); } public function hasCreatedBy() :bool { return $this->_hasForeignVal('lmm-user', $this->getCreatedById()); } public function getName() :string { return $this->_getStringVal('name'); } public function hasName() :bool { return $this->_hasStringVal('name'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setName(string $name) { $this->_setStringVal('name', $name); return $this; } public function getSrc() :string { return $this->_getStringVal('src'); } public function hasSrc() :bool { return $this->_hasStringVal('src'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setSrc(string $src) { $this->_setStringVal('src', $src); return $this; } public function getPosterSrc() :string { return $this->_getStringVal('posterSrc'); } public function hasPosterSrc() :bool { return $this->_hasStringVal('posterSrc'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setPosterSrc(string $posterSrc) { $this->_setStringVal('posterSrc', $posterSrc); return $this; } public function getType() :string { return $this->_getStringVal('type'); } public function hasType() :bool { return $this->_hasStringVal('type'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setType(string $type) { $this->_setStringVal('type', $type); return $this; } public function getMime() :string { return $this->_getStringVal('mime'); } public function hasMime() :bool { return $this->_hasStringVal('mime'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setMime(string $mime) { $this->_setStringVal('mime', $mime); return $this; } /** * @return \LaminimCMS\Instances\MultimediaItem[] */ public static function getMany(Query $builder = null): array { /** @var \LaminimCMS\Instances\MultimediaItem[] */ $r = parent::getMany($builder); return $r; } /** * @return \LaminimCMS\Instances\MultimediaItem|null */ public static function getOne(Query $builder = null) { /** @var \LaminimCMS\Instances\MultimediaItem */ $r = parent::getOne($builder); return $r; } /** @return \LaminimCMS\Generated\MultimediaItemQueryBuilder */ public static function getQueryCaller() { /** * @var \LaminimCMS\Generated\MultimediaItemQueryBuilder $builder */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE); return $builder; } /** @return \LaminimCMS\Generated\MultimediaItemQueryBuilder */ public static function getFilteredQueryCaller(array $data, array $processRules = null, array $filterRules = null) { /** * @var \LaminimCMS\Generated\MultimediaItemQueryBuilder $caller */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE, $data, $processRules, $filterRules); return $builder; } /** * @return \LaminimCMS\Instances\MultimediaItem[] */ public static function getPage(int $page, Query $builder = null): array { /** @var \LaminimCMS\Instances\MultimediaItem[] */ $r = parent::getPage($page, $builder); return $r; } }