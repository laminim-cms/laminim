<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\Query; use Lkt\Factory\Instantiator\Instantiator; class GeneratedMultimediaItem extends \Lkt\Factory\Instantiator\Instances\AbstractInstance { const GENERATED_TYPE = 'lmm-multimedia'; const COMPONENT = 'lmm-multimedia'; public function getId() :int { return $this->_getIntegerVal('id'); } public function hasId() :bool { return $this->_hasIntegerVal('id'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setId(int $id) { $this->_setIntegerVal('id', $id); return $this; } public function getCreatedAt(): ?\Carbon\Carbon { return $this->_getDateTimeVal('createdAt'); } public function getCreatedAtFormatted(string $format = null) :string { return $this->_getDateTimeFormattedVal('createdAt', $format); } public function getCreatedAtIntlFormatted(string $format = null) :string { return $this->_getDateTimeFormattedIntlVal('createdAt', $format); } public function hasCreatedAt() :bool { return $this->_hasDateTimeVal('createdAt'); } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setCreatedAt($createdAt) { $this->_setDateTimeVal('createdAt', $createdAt); return $this; } public function getCreatedById(): int { return $this->_getIntegerVal('createdById'); } public function hasCreatedById() :bool { return $this->_hasIntegerVal('createdById'); } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setCreatedById(int $createdById) { $this->_setIntegerVal('createdById', $createdById); return $this; } /** @return \LaminimCMS\Instances\User*/ public function getCreatedBy() :?\LaminimCMS\Instances\User { return $this->_getForeignVal('lmm-user', $this->getCreatedById()); } public function hasCreatedBy() :bool { return $this->_hasForeignVal('lmm-user', $this->getCreatedById()); } public function getName() :string { return $this->_getStringVal('name'); } public function hasName() :bool { return $this->_hasStringVal('name'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setName(string $name) { $this->_setStringVal('name', $name); return $this; } public function getUrl() :string { return $this->_getStringVal('url'); } public function hasUrl() :bool { return $this->_hasStringVal('url'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setUrl(string $url) { $this->_setStringVal('url', $url); return $this; } public function getSrc() { return $this->_getFileVal('src'); } public function getSrcInternalPath() :string { return $this->_getInternalPath('src'); } public function getSrcName() :string { return $this->_getFileName('src'); } public function getSrcPublicPath() :string { return $this->_getPublicPath('src'); } public function hasSrc() :bool { return $this->_hasFileVal('src'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setSrc(string $src) { $this->_setFileVal('src', $src); return $this; } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setSrcInternalPath(string $src) { $this->_setInternalPath('src', $src); return $this; } public function getSrcFieldConfig(): ?\Lkt\Factory\Schemas\Fields\FileField { return $this->_getFileFieldConfig('src'); } public function getPosterSrc() { return $this->_getFileVal('posterSrc'); } public function getPosterSrcInternalPath() :string { return $this->_getInternalPath('posterSrc'); } public function getPosterSrcName() :string { return $this->_getFileName('posterSrc'); } public function getPosterSrcPublicPath() :string { return $this->_getPublicPath('posterSrc'); } public function hasPosterSrc() :bool { return $this->_hasFileVal('posterSrc'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setPosterSrc(string $posterSrc) { $this->_setFileVal('posterSrc', $posterSrc); return $this; } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setPosterSrcInternalPath(string $posterSrc) { $this->_setInternalPath('posterSrc', $posterSrc); return $this; } public function getPosterSrcFieldConfig(): ?\Lkt\Factory\Schemas\Fields\FileField { return $this->_getFileFieldConfig('posterSrc'); } public function getType() :string { return $this->_getStringChoiceVal('type'); } public function hasType() :bool { return $this->_hasStringChoiceVal('type'); } public function hasTypeIn(array $values) :bool { return $this->_stringChoiceIn('type', $values); } public function typeIs(string $value) :bool { return $this->_stringChoiceEqual('type', $value); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setType(string $type) { $this->_setStringChoiceVal('type', $type); return $this; } public function typeIsImage() :bool { return $this->_getStringChoiceVal('type') === 'image'; } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setTypeImage() { $this->_setStringChoiceVal('type', 'image'); return $this; } public function typeIsVideo() :bool { return $this->_getStringChoiceVal('type') === 'video'; } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setTypeVideo() { $this->_setStringChoiceVal('type', 'video'); return $this; } public function typeIsFile() :bool { return $this->_getStringChoiceVal('type') === 'file'; } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setTypeFile() { $this->_setStringChoiceVal('type', 'file'); return $this; } public function typeIsOffice() :bool { return $this->_getStringChoiceVal('type') === 'office'; } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setTypeOffice() { $this->_setStringChoiceVal('type', 'office'); return $this; } public function typeIsYoutube() :bool { return $this->_getStringChoiceVal('type') === 'youtube'; } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setTypeYoutube() { $this->_setStringChoiceVal('type', 'youtube'); return $this; } public function typeIsVimeo() :bool { return $this->_getStringChoiceVal('type') === 'vimeo'; } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setTypeVimeo() { $this->_setStringChoiceVal('type', 'vimeo'); return $this; } public function typeIsUrl() :bool { return $this->_getStringChoiceVal('type') === 'url'; } /** @return \LaminimCMS\Instances\MultimediaItem*/ public function setTypeUrl() { $this->_setStringChoiceVal('type', 'url'); return $this; } public function getMime() :string { return $this->_getStringVal('mime'); } public function hasMime() :bool { return $this->_hasStringVal('mime'); } /** @return \LaminimCMS\Instances\MultimediaItem */ public function setMime(string $mime) { $this->_setStringVal('mime', $mime); return $this; } /** * @return \LaminimCMS\Instances\MultimediaItem[] */ public static function getMany(Query $builder = null): array { /** @var \LaminimCMS\Instances\MultimediaItem[] */ $r = parent::getMany($builder); return $r; } /** * @return \LaminimCMS\Instances\MultimediaItem|null */ public static function getOne(Query $builder = null) { /** @var \LaminimCMS\Instances\MultimediaItem */ $r = parent::getOne($builder); return $r; } /** @return \LaminimCMS\Generated\MultimediaItemQueryBuilder */ public static function getQueryCaller() { /** * @var \LaminimCMS\Generated\MultimediaItemQueryBuilder $builder */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE); return $builder; } /** @return \LaminimCMS\Generated\MultimediaItemQueryBuilder */ public static function getFilteredQueryCaller(array $data, array $processRules = null, array $filterRules = null) { /** * @var \LaminimCMS\Generated\MultimediaItemQueryBuilder $caller */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE, $data, $processRules, $filterRules); return $builder; } /** * @return \LaminimCMS\Instances\MultimediaItem[] */ public static function getPage(int $page, Query $builder = null): array { /** @var \LaminimCMS\Instances\MultimediaItem[] */ $r = parent::getPage($page, $builder); return $r; } }