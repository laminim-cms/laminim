<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\SelectBuilder; class MetadataSelectBuilder extends SelectBuilder { const COMPONENT = 'lmm-metadata'; const columnId = 'id'; public function andId(?string $as = null): static { return $this->andDatum('id', $as); } public static function id(?string $as = null): static { return static::datum('id', $as); } public function andCountId(?string $as = null): static { return $this->andCountDatum('id', $as); } public static function countId(?string $as = null): static { return static::countDatum('id', $as); } const columnCreatedAt = 'created_at'; public function andCreatedAt(?string $as = null): static { return $this->andDatum('created_at', $as); } public static function createdAt(?string $as = null): static { return static::datum('created_at', $as); } public function andCountCreatedAt(?string $as = null): static { return $this->andCountDatum('created_at', $as); } public static function countCreatedAt(?string $as = null): static { return static::countDatum('created_at', $as); } public function andYearCreatedAt(?string $as = null): static { return $this->andYearDatum('created_at', $as); } public static function yearCreatedAt(?string $as = null): static { return static::yearDatum('created_at', $as); } public function andMonthCreatedAt(?string $as = null): static { return $this->andMonthDatum('created_at', $as); } public static function monthCreatedAt(?string $as = null): static { return static::monthDatum('created_at', $as); } const columnCreatedBy = 'created_by'; public function andCreatedBy(?string $as = null): static { return $this->andDatum('created_by', $as); } public static function createdBy(?string $as = null): static { return static::datum('created_by', $as); } public function andCountCreatedBy(?string $as = null): static { return $this->andCountDatum('created_by', $as); } public static function countCreatedBy(?string $as = null): static { return static::countDatum('created_by', $as); } const columnItemType = 'item_type'; public function andItemType(?string $as = null): static { return $this->andDatum('item_type', $as); } public static function itemType(?string $as = null): static { return static::datum('item_type', $as); } public function andCountItemType(?string $as = null): static { return $this->andCountDatum('item_type', $as); } public static function countItemType(?string $as = null): static { return static::countDatum('item_type', $as); } const columnItem = 'item_id'; public function andItem(?string $as = null): static { return $this->andDatum('item_id', $as); } public static function item(?string $as = null): static { return static::datum('item_id', $as); } public function andCountItem(?string $as = null): static { return $this->andCountDatum('item_id', $as); } public static function countItem(?string $as = null): static { return static::countDatum('item_id', $as); } const columnTitle = 'title'; public function andTitle(?string $as = null): static { return $this->andDatum('title', $as); } public static function title(?string $as = null): static { return static::datum('title', $as); } public function andCountTitle(?string $as = null): static { return $this->andCountDatum('title', $as); } public static function countTitle(?string $as = null): static { return static::countDatum('title', $as); } const columnDescription = 'description'; public function andDescription(?string $as = null): static { return $this->andDatum('description', $as); } public static function description(?string $as = null): static { return static::datum('description', $as); } public function andCountDescription(?string $as = null): static { return $this->andCountDatum('description', $as); } public static function countDescription(?string $as = null): static { return static::countDatum('description', $as); } const columnKeywords = 'keywords'; public function andKeywords(?string $as = null): static { return $this->andDatum('keywords', $as); } public static function keywords(?string $as = null): static { return static::datum('keywords', $as); } public function andCountKeywords(?string $as = null): static { return $this->andCountDatum('keywords', $as); } public static function countKeywords(?string $as = null): static { return static::countDatum('keywords', $as); } const columnUrl = 'url'; public function andUrl(?string $as = null): static { return $this->andDatum('url', $as); } public static function url(?string $as = null): static { return static::datum('url', $as); } public function andCountUrl(?string $as = null): static { return $this->andCountDatum('url', $as); } public static function countUrl(?string $as = null): static { return static::countDatum('url', $as); } }