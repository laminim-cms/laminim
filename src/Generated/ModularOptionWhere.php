<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\DateIntervals\AbstractInterval; class ModularOptionWhere extends Where { const COMPONENT = 'lmm-modular-option'; /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function getEmpty() { /** @var \LaminimCMS\Generated\ModularOptionWhere $r */ $r = parent::getEmpty(); return $r; } public function andIdEqual(int $value) { return $this->andIntegerEqual('id', $value); } public function andIdNot(int $value) { return $this->andIntegerNot('id', $value); } public function andIdGreaterThan(int $value) { return $this->andIntegerGreaterThan('id', $value); } public function andIdGreaterOrEqualThan(int $value) { return $this->andIntegerGreaterOrEqualThan('id', $value); } public function andIdLowerThan(int $value) { return $this->andIntegerLowerThan('id', $value); } public function andIdLowerOrEqualThan(int $value) { return $this->andIntegerLowerOrEqualThan('id', $value); } public function andIdBetween(int $from, int $to) { return $this->andIntegerBetween('id', $from, $to); } public function andIdIn(array $values) { return $this->andIntegerIn('id', $values); } public function andIdNotIn(array $values) { return $this->andIntegerNotIn('id', $values); } public function andIdEqualToField(string $component, string $field ) { return $this->andFieldEqualToField('id', $component, $field); } public function orIdEqual(int $value) { return $this->orIntegerEqual('id', $value); } public function orIdNot(int $value) { return $this->orIntegerNot('id', $value); } public function orIdGreaterThan(int $value) { return $this->orIntegerGreaterThan('id', $value); } public function orIdGreaterOrEqualThan(int $value) { return $this->orIntegerGreaterOrEqualThan('id', $value); } public function orIdLowerThan(int $value) { return $this->orIntegerLowerThan('id', $value); } public function orIdLowerOrEqualThan(int $value) { return $this->orIntegerLowerOrEqualThan('id', $value); } public function orIdBetween(int $from, int $to) { return $this->orIntegerBetween('id', $from, $to); } public function orIdIn(array $values) { return $this->orIntegerIn('id', $values); } public function orIdNotIn(array $values) { return $this->orIntegerNotIn('id', $values); } public function orIdEqualToField(string $component, string $field ) { return $this->orFieldEqualToField('id', $component, $field); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idEqual(int $value) { return static::integerEqual('id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idNot(int $value) { return static::integerNot('id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idGreaterThan(int $value) { return static::integerGreaterThan('id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idGreaterOrEqualThan(int $value) { return static::integerGreaterOrEqualThan('id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idLowerThan(int $value) { return static::integerLowerThan('id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idLowerOrEqualThan(int $value) { return static::integerLowerOrEqualThan('id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idBetween(int $from, int $to) { return static::integerBetween('id', $from, $to); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idIn(array $values) { return static::integerIn('id', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function idNotIn(array $values) { return static::integerNotIn('id', $values); } public function andNameEqual(string $value) { return $this->andStringEqual('name', $value); } public function andNameNot(string $value) { return $this->andStringNot('name', $value); } public function andNameLike(string $value) { return $this->andStringLike('name', $value); } public function andNameNotLike(string $value) { return $this->andStringNotLike('name', $value); } public function andNameBeginsLike(string $value) { return $this->andStringBeginsLike('name', $value); } public function andNameNotBeginsLike(string $value) { return $this->andStringNotBeginsLike('name', $value); } public function andNameEndsLike(string $value) { return $this->andStringEndsLike('name', $value); } public function andNameNotEndsLike(string $value) { return $this->andStringNotEndsLike('name', $value); } public function andNameIn(array $values) { return $this->andStringIn('name', $values); } public function andNameNotIn(array $values) { return $this->andStringNotIn('name', $values); } public function orNameEqual(string $value) { return $this->orStringEqual('name', $value); } public function orNameNot(string $value) { return $this->orStringNot('name', $value); } public function orNameLike(string $value) { return $this->orStringLike('name', $value); } public function orNameNotLike(string $value) { return $this->orStringNotLike('name', $value); } public function orNameBeginsLike(string $value) { return $this->orStringBeginsLike('name', $value); } public function orNameNotBeginsLike(string $value) { return $this->orStringNotBeginsLike('name', $value); } public function orNameEndsLike(string $value) { return $this->orStringEndsLike('name', $value); } public function orNameNotEndsLike(string $value) { return $this->orStringNotEndsLike('name', $value); } public function orNameIn(array $values) { return $this->orStringIn('name', $values); } public function orNameNotIn(array $values) { return $this->orStringNotIn('name', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameEqual(string $value) { return static::stringEqual('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameNot(string $value) { return static::stringNot('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameLike(string $value) { return static::stringLike('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameNotLike(string $value) { return static::stringNotLike('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameBeginsLike(string $value) { return static::stringBeginsLike('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameNotBeginsLike(string $value) { return static::stringNotBeginsLike('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameEndsLike(string $value) { return static::stringEndsLike('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameNotEndsLike(string $value) { return static::stringNotEndsLike('name', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameIn(array $values) { return static::stringIn('name', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function nameNotIn(array $values) { return static::stringNotIn('name', $values); } public function andValueEqual(string $value) { return $this->andi18nStringEqual('value', $value); } public function andValueNot(string $value) { return $this->andi18nStringNot('value', $value); } public function andValueLike(string $value) { return $this->andi18nStringLike('value', $value); } public function andValueNotLike(string $value) { return $this->andi18nStringNotLike('value', $value); } public function andValueBeginsLike(string $value) { return $this->andi18nStringBeginsLike('value', $value); } public function andValueNotBeginsLike(string $value) { return $this->andi18nStringNotBeginsLike('value', $value); } public function andValueEndsLike(string $value) { return $this->andi18nStringEndsLike('value', $value); } public function andValueNotEndsLike(string $value) { return $this->andi18nStringNotEndsLike('value', $value); } public function andValueIn(array $values) { return $this->andi18nStringIn('value', $values); } public function andValueNotIn(array $values) { return $this->andi18nStringNotIn('value', $values); } public function orValueEqual(string $value) { return $this->ori18nStringEqual('value', $value); } public function orValueNot(string $value) { return $this->ori18nStringNot('value', $value); } public function orValueLike(string $value) { return $this->ori18nStringLike('value', $value); } public function orValueNotLike(string $value) { return $this->ori18nStringNotLike('value', $value); } public function orValueBeginsLike(string $value) { return $this->ori18nStringBeginsLike('value', $value); } public function orValueNotBeginsLike(string $value) { return $this->ori18nStringNotBeginsLike('value', $value); } public function orValueEndsLike(string $value) { return $this->ori18nStringEndsLike('value', $value); } public function orValueNotEndsLike(string $value) { return $this->ori18nStringNotEndsLike('value', $value); } public function orValueIn(array $values) { return $this->ori18nStringIn('value', $values); } public function orValueNotIn(array $values) { return $this->ori18nStringNotIn('value', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEqual(string $value) { return static::i18nStringEqual('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueNot(string $value) { return static::i18nStringNot('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueLike(string $value) { return static::i18nStringLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueNotLike(string $value) { return static::i18nStringNotLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueBeginsLike(string $value) { return static::i18nStringBeginsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueNotBeginsLike(string $value) { return static::i18nStringNotBeginsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEndsLike(string $value) { return static::i18nStringEndsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueNotEndsLike(string $value) { return static::i18nStringNotEndsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueIn(array $values) { return static::i18nStringIn('value', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueNotIn(array $values) { return static::i18nStringNotIn('value', $values); } public function andValueEnEqual(string $value) { return $this->andi18nStringEqual('value', $value); } public function andValueEnNot(string $value) { return $this->andi18nStringNot('value', $value); } public function andValueEnLike(string $value) { return $this->andi18nStringLike('value', $value); } public function andValueEnNotLike(string $value) { return $this->andi18nStringNotLike('value', $value); } public function andValueEnBeginsLike(string $value) { return $this->andi18nStringBeginsLike('value', $value); } public function andValueEnNotBeginsLike(string $value) { return $this->andi18nStringNotBeginsLike('value', $value); } public function andValueEnEndsLike(string $value) { return $this->andi18nStringEndsLike('value', $value); } public function andValueEnNotEndsLike(string $value) { return $this->andi18nStringNotEndsLike('value', $value); } public function andValueEnIn(array $values) { return $this->andi18nStringIn('value', $values); } public function andValueEnNotIn(array $values) { return $this->andi18nStringNotIn('value', $values); } public function orValueEnEqual(string $value) { return $this->ori18nStringEqual('value', $value); } public function orValueEnNot(string $value) { return $this->ori18nStringNot('value', $value); } public function orValueEnLike(string $value) { return $this->ori18nStringLike('value', $value); } public function orValueEnNotLike(string $value) { return $this->ori18nStringNotLike('value', $value); } public function orValueEnBeginsLike(string $value) { return $this->ori18nStringBeginsLike('value', $value); } public function orValueEnNotBeginsLike(string $value) { return $this->ori18nStringNotBeginsLike('value', $value); } public function orValueEnEndsLike(string $value) { return $this->ori18nStringEndsLike('value', $value); } public function orValueEnNotEndsLike(string $value) { return $this->ori18nStringNotEndsLike('value', $value); } public function orValueEnIn(array $values) { return $this->ori18nStringIn('value', $values); } public function orValueEnNotIn(array $values) { return $this->ori18nStringNotIn('value', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnEqual(string $value) { return static::i18nStringEqual('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnNot(string $value) { return static::i18nStringNot('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnLike(string $value) { return static::i18nStringLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnNotLike(string $value) { return static::i18nStringNotLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnBeginsLike(string $value) { return static::i18nStringBeginsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnNotBeginsLike(string $value) { return static::i18nStringNotBeginsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnEndsLike(string $value) { return static::i18nStringEndsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnNotEndsLike(string $value) { return static::i18nStringNotEndsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnIn(array $values) { return static::i18nStringIn('value', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEnNotIn(array $values) { return static::i18nStringNotIn('value', $values); } public function andValueEsEqual(string $value) { return $this->andi18nStringEqual('value', $value); } public function andValueEsNot(string $value) { return $this->andi18nStringNot('value', $value); } public function andValueEsLike(string $value) { return $this->andi18nStringLike('value', $value); } public function andValueEsNotLike(string $value) { return $this->andi18nStringNotLike('value', $value); } public function andValueEsBeginsLike(string $value) { return $this->andi18nStringBeginsLike('value', $value); } public function andValueEsNotBeginsLike(string $value) { return $this->andi18nStringNotBeginsLike('value', $value); } public function andValueEsEndsLike(string $value) { return $this->andi18nStringEndsLike('value', $value); } public function andValueEsNotEndsLike(string $value) { return $this->andi18nStringNotEndsLike('value', $value); } public function andValueEsIn(array $values) { return $this->andi18nStringIn('value', $values); } public function andValueEsNotIn(array $values) { return $this->andi18nStringNotIn('value', $values); } public function orValueEsEqual(string $value) { return $this->ori18nStringEqual('value', $value); } public function orValueEsNot(string $value) { return $this->ori18nStringNot('value', $value); } public function orValueEsLike(string $value) { return $this->ori18nStringLike('value', $value); } public function orValueEsNotLike(string $value) { return $this->ori18nStringNotLike('value', $value); } public function orValueEsBeginsLike(string $value) { return $this->ori18nStringBeginsLike('value', $value); } public function orValueEsNotBeginsLike(string $value) { return $this->ori18nStringNotBeginsLike('value', $value); } public function orValueEsEndsLike(string $value) { return $this->ori18nStringEndsLike('value', $value); } public function orValueEsNotEndsLike(string $value) { return $this->ori18nStringNotEndsLike('value', $value); } public function orValueEsIn(array $values) { return $this->ori18nStringIn('value', $values); } public function orValueEsNotIn(array $values) { return $this->ori18nStringNotIn('value', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsEqual(string $value) { return static::i18nStringEqual('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsNot(string $value) { return static::i18nStringNot('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsLike(string $value) { return static::i18nStringLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsNotLike(string $value) { return static::i18nStringNotLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsBeginsLike(string $value) { return static::i18nStringBeginsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsNotBeginsLike(string $value) { return static::i18nStringNotBeginsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsEndsLike(string $value) { return static::i18nStringEndsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsNotEndsLike(string $value) { return static::i18nStringNotEndsLike('value', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsIn(array $values) { return static::i18nStringIn('value', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function valueEsNotIn(array $values) { return static::i18nStringNotIn('value', $values); } public function andTypeEqual(string $value) { return $this->andStringEqual('type', $value); } public function andTypeNot(string $value) { return $this->andStringNot('type', $value); } public function andTypeLike(string $value) { return $this->andStringLike('type', $value); } public function andTypeNotLike(string $value) { return $this->andStringNotLike('type', $value); } public function andTypeBeginsLike(string $value) { return $this->andStringBeginsLike('type', $value); } public function andTypeNotBeginsLike(string $value) { return $this->andStringNotBeginsLike('type', $value); } public function andTypeEndsLike(string $value) { return $this->andStringEndsLike('type', $value); } public function andTypeNotEndsLike(string $value) { return $this->andStringNotEndsLike('type', $value); } public function andTypeIn(array $values) { return $this->andStringIn('type', $values); } public function andTypeNotIn(array $values) { return $this->andStringNotIn('type', $values); } public function orTypeEqual(string $value) { return $this->orStringEqual('type', $value); } public function orTypeNot(string $value) { return $this->orStringNot('type', $value); } public function orTypeLike(string $value) { return $this->orStringLike('type', $value); } public function orTypeNotLike(string $value) { return $this->orStringNotLike('type', $value); } public function orTypeBeginsLike(string $value) { return $this->orStringBeginsLike('type', $value); } public function orTypeNotBeginsLike(string $value) { return $this->orStringNotBeginsLike('type', $value); } public function orTypeEndsLike(string $value) { return $this->orStringEndsLike('type', $value); } public function orTypeNotEndsLike(string $value) { return $this->orStringNotEndsLike('type', $value); } public function orTypeIn(array $values) { return $this->orStringIn('type', $values); } public function orTypeNotIn(array $values) { return $this->orStringNotIn('type', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeEqual(string $value) { return static::stringEqual('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeNot(string $value) { return static::stringNot('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeLike(string $value) { return static::stringLike('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeNotLike(string $value) { return static::stringNotLike('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeBeginsLike(string $value) { return static::stringBeginsLike('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeNotBeginsLike(string $value) { return static::stringNotBeginsLike('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeEndsLike(string $value) { return static::stringEndsLike('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeNotEndsLike(string $value) { return static::stringNotEndsLike('type', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeIn(array $values) { return static::stringIn('type', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function typeNotIn(array $values) { return static::stringNotIn('type', $values); } public function andItemIdEqual(string $value) { return $this->andStringEqual('item_id', $value); } public function andItemIdNot(string $value) { return $this->andStringNot('item_id', $value); } public function andItemIdLike(string $value) { return $this->andStringLike('item_id', $value); } public function andItemIdNotLike(string $value) { return $this->andStringNotLike('item_id', $value); } public function andItemIdBeginsLike(string $value) { return $this->andStringBeginsLike('item_id', $value); } public function andItemIdNotBeginsLike(string $value) { return $this->andStringNotBeginsLike('item_id', $value); } public function andItemIdEndsLike(string $value) { return $this->andStringEndsLike('item_id', $value); } public function andItemIdNotEndsLike(string $value) { return $this->andStringNotEndsLike('item_id', $value); } public function andItemIdIn(array $values) { return $this->andStringIn('item_id', $values); } public function andItemIdNotIn(array $values) { return $this->andStringNotIn('item_id', $values); } public function orItemIdEqual(string $value) { return $this->orStringEqual('item_id', $value); } public function orItemIdNot(string $value) { return $this->orStringNot('item_id', $value); } public function orItemIdLike(string $value) { return $this->orStringLike('item_id', $value); } public function orItemIdNotLike(string $value) { return $this->orStringNotLike('item_id', $value); } public function orItemIdBeginsLike(string $value) { return $this->orStringBeginsLike('item_id', $value); } public function orItemIdNotBeginsLike(string $value) { return $this->orStringNotBeginsLike('item_id', $value); } public function orItemIdEndsLike(string $value) { return $this->orStringEndsLike('item_id', $value); } public function orItemIdNotEndsLike(string $value) { return $this->orStringNotEndsLike('item_id', $value); } public function orItemIdIn(array $values) { return $this->orStringIn('item_id', $values); } public function orItemIdNotIn(array $values) { return $this->orStringNotIn('item_id', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdEqual(string $value) { return static::stringEqual('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdNot(string $value) { return static::stringNot('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdLike(string $value) { return static::stringLike('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdNotLike(string $value) { return static::stringNotLike('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdBeginsLike(string $value) { return static::stringBeginsLike('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdNotBeginsLike(string $value) { return static::stringNotBeginsLike('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdEndsLike(string $value) { return static::stringEndsLike('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdNotEndsLike(string $value) { return static::stringNotEndsLike('item_id', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdIn(array $values) { return static::stringIn('item_id', $values); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function itemIdNotIn(array $values) { return static::stringNotIn('item_id', $values); } public function andCreatedAtBetween(string $from, string $to) { return $this->andDatetimeBetween('created_at', $from, $to); } public function andCreatedAtEqual(string $value) { return $this->andDatetimeEqual('created_at', $value); } public function andCreatedAtNot(string $value) { return $this->andDatetimeNot('created_at', $value); } public function andCreatedAtGreaterOrEqualThan(string $value, AbstractInterval $interval = null) { return $this->andDatetimeGreaterOrEqualThan('created_at', $value, $interval); } public function andCreatedAtGreaterOrEqualThanNow(AbstractInterval $interval = null) { return $this->andDatetimeGreaterOrEqualThanNow('created_at', $interval); } public function andCreatedAtGreaterThan(string $value, AbstractInterval $interval = null) { return $this->andDatetimeGreaterThan('created_at', $value, $interval); } public function andCreatedAtGreaterThanNow(AbstractInterval $interval = null) { return $this->andDatetimeGreaterThanNow('created_at', $interval); } public function andCreatedAtLowerOrEqualThan(string $value, AbstractInterval $interval = null) { return $this->andDatetimeLowerOrEqualThan('created_at', $value, $interval); } public function andCreatedAtLowerOrEqualThanNow(AbstractInterval $interval = null) { return $this->andDatetimeLowerOrEqualThanNow('created_at', $interval); } public function andCreatedAtLowerThan(string $value, AbstractInterval $interval = null) { return $this->andDatetimeLowerThan('created_at', $value, $interval); } public function andCreatedAtLowerThanNow(AbstractInterval $interval = null) { return $this->andDatetimeLowerThanNow('created_at', $interval); } public function andCreatedAtLike(string $value) { return $this->andDatetimeLike('created_at', $value); } public function andCreatedAtNotLike(string $value) { return $this->andDatetimeNotLike('created_at', $value); } public function andCreatedAtBeginsLike(string $value) { return $this->andDatetimeBeginsLike('created_at', $value); } public function andCreatedAtNotBeginsLike(string $value) { return $this->andDatetimeNotBeginsLike('created_at', $value); } public function andCreatedAtEndsLike(string $value) { return $this->andDatetimeEndsLike('created_at', $value); } public function andCreatedAtNotEndsLike(string $value) { return $this->andDatetimeNotEndsLike('created_at', $value); } public function orCreatedAtBetween(string $from, string $to) { return $this->orDatetimeBetween('created_at', $from, $to); } public function orCreatedAtEqual(string $value) { return $this->orDatetimeEqual('created_at', $value); } public function orCreatedAtNot(string $value) { return $this->orDatetimeNot('created_at', $value); } public function orCreatedAtGreaterOrEqualThan(string $value, AbstractInterval $interval = null) { return $this->orDatetimeGreaterOrEqualThan('created_at', $value, $interval); } public function orCreatedAtGreaterOrEqualThanNow(AbstractInterval $interval = null) { return $this->orDatetimeGreaterOrEqualThanNow('created_at', $interval); } public function orCreatedAtGreaterThan(string $value, AbstractInterval $interval = null) { return $this->orDatetimeGreaterThan('created_at', $value, $interval); } public function orCreatedAtGreaterThanNow(AbstractInterval $interval = null) { return $this->orDatetimeGreaterThanNow('created_at', $interval); } public function orCreatedAtLowerOrEqualThan(string $value, AbstractInterval $interval = null) { return $this->orDatetimeLowerOrEqualThan('created_at', $value, $interval); } public function orCreatedAtLowerOrEqualThanNow(AbstractInterval $interval = null) { return $this->orDatetimeLowerOrEqualThanNow('created_at', $interval); } public function orCreatedAtLowerThan(string $value, AbstractInterval $interval = null) { return $this->orDatetimeLowerThan('created_at', $value, $interval); } public function orCreatedAtLowerThanNow(AbstractInterval $interval = null) { return $this->orDatetimeLowerThanNow('created_at', $interval); } public function orCreatedAtLike(string $value) { return $this->orDatetimeLike('created_at', $value); } public function orCreatedAtNotLike(string $value) { return $this->orDatetimeNotLike('created_at', $value); } public function orCreatedAtBeginsLike(string $value) { return $this->orDatetimeBeginsLike('created_at', $value); } public function orCreatedAtNotBeginsLike(string $value) { return $this->orDatetimeNotBeginsLike('created_at', $value); } public function orCreatedAtEndsLike(string $value) { return $this->orDatetimeEndsLike('created_at', $value); } public function orCreatedAtNotEndsLike(string $value) { return $this->orDatetimeNotEndsLike('created_at', $value); } /** @return \LaminimCMS\Generated\ModularOptionWhere */ public static function createdAtBetween(string $from, string $to) { return static::datetimeBetween('created_at', $from, $to); } public static function createdAtEqual(string $value) { return static::datetimeEqual('created_at', $value); } public static function createdAtNot(string $value) { return static::datetimeNot('created_at', $value); } public static function createdAtGreaterOrEqualThan(string $value, AbstractInterval $interval = null) { return static::datetimeGreaterOrEqualThan('created_at', $value, $interval); } public static function createdAtGreaterOrEqualThanNow(AbstractInterval $interval = null) { return static::datetimeGreaterOrEqualThanNow('created_at', $interval); } public static function createdAtGreaterThan(string $value, AbstractInterval $interval = null) { return static::datetimeGreaterThan('created_at', $value, $interval); } public static function createdAtGreaterThanNow(AbstractInterval $interval = null) { return static::datetimeGreaterThanNow('created_at', $interval); } public static function createdAtLowerOrEqualThan(string $value, AbstractInterval $interval = null) { return static::datetimeLowerOrEqualThan('created_at', $value, $interval); } public static function createdAtLowerOrEqualThanNow(AbstractInterval $interval = null) { return static::datetimeLowerOrEqualThanNow('created_at', $interval); } public static function createdAtLowerThan(string $value, AbstractInterval $interval = null) { return static::datetimeLowerThan('created_at', $value, $interval); } public static function createdAtLowerThanNow(AbstractInterval $interval = null) { return static::datetimeLowerThanNow('created_at', $interval); } public static function createdAtLike(string $value) { return static::datetimeLike('created_at', $value); } public static function createdAtNotLike(string $value) { return static::datetimeNotLike('created_at', $value); } public static function createdAtBeginsLike(string $value) { return static::datetimeBeginsLike('created_at', $value); } public static function createdAtNotBeginsLike(string $value) { return static::datetimeNotBeginsLike('created_at', $value); } public static function createdAtEndsLike(string $value) { return static::datetimeEndsLike('created_at', $value); } public static function createdAtNotEndsLike(string $value) { return static::datetimeNotEndsLike('created_at', $value); } }