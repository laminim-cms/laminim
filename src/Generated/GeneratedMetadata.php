<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\Query; use Lkt\Factory\Instantiator\Instantiator; class GeneratedMetadata extends \Lkt\Factory\Instantiator\Instances\AbstractInstance { const GENERATED_TYPE = 'lmm-metadata'; const COMPONENT = 'lmm-metadata'; public function getId() :int { return $this->_getIntegerVal('id'); } public function hasId() :bool { return $this->_hasIntegerVal('id'); } /** @return \LaminimCMS\Instances\Metadata */ public function setId(int $id) { $this->_setIntegerVal('id', $id); return $this; } public function getCreatedAt(): ?\Carbon\Carbon { return $this->_getDateTimeVal('createdAt'); } public function getCreatedAtFormatted(string $format = null) :string { return $this->_getDateTimeFormattedVal('createdAt', $format); } public function getCreatedAtIntlFormatted(string $format = null) :string { return $this->_getDateTimeFormattedIntlVal('createdAt', $format); } public function hasCreatedAt() :bool { return $this->_hasDateTimeVal('createdAt'); } /** @return \LaminimCMS\Instances\Metadata*/ public function setCreatedAt($createdAt) { $this->_setDateTimeVal('createdAt', $createdAt); return $this; } public function getItemType() :string { return $this->_getStringVal('itemType'); } public function hasItemType() :bool { return $this->_hasStringVal('itemType'); } /** @return \LaminimCMS\Instances\Metadata */ public function setItemType(string $itemType) { $this->_setStringVal('itemType', $itemType); return $this; } public function getItemIdId(): int { return $this->_getIntegerVal('itemIdId'); } public function hasItemIdId() :bool { return $this->_hasIntegerVal('itemIdId'); } /** @return \LaminimCMS\Instances\Metadata*/ public function setItemIdId(int $itemIdId) { $this->_setIntegerVal('itemIdId', $itemIdId); return $this; } public function getTitle() :string { return $this->_getStringVal('title'); } public function hasTitle() :bool { return $this->_hasStringVal('title'); } /** @return \LaminimCMS\Instances\Metadata */ public function setTitle(string $title) { $this->_setStringVal('title', $title); return $this; } public function getDescription() :string { return $this->_getStringVal('description'); } public function hasDescription() :bool { return $this->_hasStringVal('description'); } /** @return \LaminimCMS\Instances\Metadata */ public function setDescription(string $description) { $this->_setStringVal('description', $description); return $this; } public function getKeywords() :string { return $this->_getStringVal('keywords'); } public function hasKeywords() :bool { return $this->_hasStringVal('keywords'); } /** @return \LaminimCMS\Instances\Metadata */ public function setKeywords(string $keywords) { $this->_setStringVal('keywords', $keywords); return $this; } public function getUrl() :string { return $this->_getStringVal('url'); } public function hasUrl() :bool { return $this->_hasStringVal('url'); } /** @return \LaminimCMS\Instances\Metadata */ public function setUrl(string $url) { $this->_setStringVal('url', $url); return $this; } /** * @return \LaminimCMS\Instances\Metadata[] */ public static function getMany(Query $builder = null): array { /** @var \LaminimCMS\Instances\Metadata[] */ $r = parent::getMany($builder); return $r; } /** * @return \LaminimCMS\Instances\Metadata|null */ public static function getOne(Query $builder = null) { /** @var \LaminimCMS\Instances\Metadata */ $r = parent::getOne($builder); return $r; } /** @return \LaminimCMS\Generated\MetadataQueryBuilder */ public static function getQueryCaller() { /** * @var \LaminimCMS\Generated\MetadataQueryBuilder $builder */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE); return $builder; } /** @return \LaminimCMS\Generated\MetadataQueryBuilder */ public static function getFilteredQueryCaller(array $data, array $processRules = null, array $filterRules = null) { /** * @var \LaminimCMS\Generated\MetadataQueryBuilder $caller */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE, $data, $processRules, $filterRules); return $builder; } /** * @return \LaminimCMS\Instances\Metadata[] */ public static function getPage(int $page, Query $builder = null): array { /** @var \LaminimCMS\Instances\Metadata[] */ $r = parent::getPage($page, $builder); return $r; } }