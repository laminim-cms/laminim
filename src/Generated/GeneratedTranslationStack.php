<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\Query; use Lkt\Factory\Instantiator\Instantiator; class GeneratedTranslationStack extends \Lkt\Factory\Instantiator\Instances\AbstractInstance { const GENERATED_TYPE = 'lmm-i18n-stack'; const COMPONENT = 'lmm-i18n-stack'; public function getId() :int { return $this->_getIntegerVal('id'); } public function hasId() :bool { return $this->_hasIntegerVal('id'); } /** @return \LaminimCMS\Instances\TranslationStack */ public function setId(int $id) { $this->_setIntegerVal('id', $id); return $this; } public function getName() :string { return $this->_getStringVal('name'); } public function hasName() :bool { return $this->_hasStringVal('name'); } /** @return \LaminimCMS\Instances\TranslationStack */ public function setName(string $name) { $this->_setStringVal('name', $name); return $this; } public function getProperty() :string { return $this->_getStringVal('property'); } public function hasProperty() :bool { return $this->_hasStringVal('property'); } /** @return \LaminimCMS\Instances\TranslationStack */ public function setProperty(string $property) { $this->_setStringVal('property', $property); return $this; } public function requiredAdminPerms() :bool { return $this->_getBooleanVal('requiredAdminPerms'); } /** @return \LaminimCMS\Instances\TranslationStack */ public function setRequiredAdminPerms(bool $requiredAdminPerms) { $this->_setBooleanVal('requiredAdminPerms', $requiredAdminPerms); return $this; } public function onlyForCms() :bool { return $this->_getBooleanVal('onlyForCms'); } /** @return \LaminimCMS\Instances\TranslationStack */ public function setOnlyForCms(bool $onlyForCms) { $this->_setBooleanVal('onlyForCms', $onlyForCms); return $this; } /** * @return \LaminimCMS\Instances\TranslationStack[] */ public static function getMany(Query $builder = null): array { /** @var \LaminimCMS\Instances\TranslationStack[] */ $r = parent::getMany($builder); return $r; } /** * @return \LaminimCMS\Instances\TranslationStack|null */ public static function getOne(Query $builder = null) { /** @var \LaminimCMS\Instances\TranslationStack */ $r = parent::getOne($builder); return $r; } /** @return \LaminimCMS\Generated\TranslationStackQueryBuilder */ public static function getQueryCaller() { /** * @var \LaminimCMS\Generated\TranslationStackQueryBuilder $builder */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE); return $builder; } /** @return \LaminimCMS\Generated\TranslationStackQueryBuilder */ public static function getFilteredQueryCaller(array $data, array $processRules = null, array $filterRules = null) { /** * @var \LaminimCMS\Generated\TranslationStackQueryBuilder $caller */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE, $data, $processRules, $filterRules); return $builder; } /** * @return \LaminimCMS\Instances\TranslationStack[] */ public static function getPage(int $page, Query $builder = null): array { /** @var \LaminimCMS\Instances\TranslationStack[] */ $r = parent::getPage($page, $builder); return $r; } }