<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\Query; use Lkt\Factory\Instantiator\Instantiator; class GeneratedPage extends \Lkt\Factory\Instantiator\Instances\AbstractInstance { const GENERATED_TYPE = 'lmm-pages'; const COMPONENT = 'lmm-pages'; public function getId() :int { return $this->_getIntegerVal('id'); } public function hasId() :bool { return $this->_hasIntegerVal('id'); } /** @return \LaminimCMS\Instances\Page */ public function setId(int $id) { $this->_setIntegerVal('id', $id); return $this; } public function getName() :string { return $this->_getStringVal('name'); } public function hasName() :bool { return $this->_hasStringVal('name'); } /** @return \LaminimCMS\Instances\Page */ public function setName(string $name) { $this->_setStringVal('name', $name); return $this; } public function getCreatedAt(): ?\Carbon\Carbon { return $this->_getDateTimeVal('createdAt'); } public function getCreatedAtFormatted(string $format = null) :string { return $this->_getDateTimeFormattedVal('createdAt', $format); } public function getCreatedAtIntlFormatted(string $format = null) :string { return $this->_getDateTimeFormattedIntlVal('createdAt', $format); } public function hasCreatedAt() :bool { return $this->_hasDateTimeVal('createdAt'); } /** @return \LaminimCMS\Instances\Page*/ public function setCreatedAt($createdAt) { $this->_setDateTimeVal('createdAt', $createdAt); return $this; } public function getCreatedById(): int { return $this->_getIntegerVal('createdById'); } public function hasCreatedById() :bool { return $this->_hasIntegerVal('createdById'); } /** @return \LaminimCMS\Instances\Page*/ public function setCreatedById(int $createdById) { $this->_setIntegerVal('createdById', $createdById); return $this; } /** @return \LaminimCMS\Instances\User*/ public function getCreatedBy() :?\LaminimCMS\Instances\User { return $this->_getForeignVal('lmm-user', $this->getCreatedById(), 'createdBy'); } public function hasCreatedBy() :bool { return $this->_hasForeignVal('lmm-user', $this->getCreatedById(), 'createdBy'); } /** @return \LaminimCMS\Instances\ModularBlock[] */ public function getModularBlocks(): array { return $this->_getRelatedVal('lmm-modular-block', 'modularBlocks'); } /** @return \LaminimCMS\Instances\ModularBlock[] */ public function getModularBlocksPage(int $page, Where $where = null): array { return $this->_getRelatedPage('lmm-modular-block', 'modularBlocks', $page, $where); } public function getModularBlocksCount(string $countableField = '', Where $where = null): int { return $this->_getRelatedCount('lmm-modular-block', 'modularBlocks', $countableField, $where); } public function getModularBlocksAmountOfPages(string $countableField = '', Where $where = null): int { return $this->_getRelatedAmountOfPages('lmm-modular-block', 'modularBlocks', $countableField, $where); } public function hasModularBlocks() :bool { return $this->_hasRelatedVal('lmm-modular-block', 'modularBlocks'); } /** @return \LaminimCMS\Instances\Page */ public function setModularBlocksWithData(array $modularBlocks) { $this->_setRelatedValWithData('lmm-modular-block', 'modularBlocks', $modularBlocks); return $this; } /** @return \LaminimCMS\Generated\ModularBlockQueryBuilder */ public function getModularBlocksQueryCaller(): \LaminimCMS\Generated\ModularBlockQueryBuilder { return $this->_getRelatedCustomQueryCaller('lmm-modular-block', 'modularBlocks'); } /** @return \LaminimCMS\Instances\Metadata|null */ public function getMetadata(): ?\LaminimCMS\Instances\Metadata { return $this->_getRelatedValSingle('lmm-metadata', 'metadata'); } public function hasMetadata() :bool { return $this->_hasRelatedVal('lmm-metadata', 'metadata'); } /** @return \LaminimCMS\Instances\Page */ public function setMetadataWithData(array $metadata) { $this->_setRelatedValWithData('lmm-metadata', 'metadata', $metadata); return $this; } /** @return \LaminimCMS\Generated\MetadataQueryBuilder */ public function getMetadataQueryCaller(): \LaminimCMS\Generated\MetadataQueryBuilder { return $this->_getRelatedCustomQueryCaller('lmm-metadata', 'metadata'); } /** @return \LaminimCMS\Instances\Visibility|null */ public function getVisibility(): ?\LaminimCMS\Instances\Visibility { return $this->_getRelatedValSingle('lmm-visibility', 'visibility'); } public function hasVisibility() :bool { return $this->_hasRelatedVal('lmm-visibility', 'visibility'); } /** @return \LaminimCMS\Instances\Page */ public function setVisibilityWithData(array $visibility) { $this->_setRelatedValWithData('lmm-visibility', 'visibility', $visibility); return $this; } /** @return \LaminimCMS\Generated\VisibilityQueryBuilder */ public function getVisibilityQueryCaller(): \LaminimCMS\Generated\VisibilityQueryBuilder { return $this->_getRelatedCustomQueryCaller('lmm-visibility', 'visibility'); } /** * @return \LaminimCMS\Instances\Page[] */ public static function getMany(Query $builder = null): array { /** @var \LaminimCMS\Instances\Page[] */ $r = parent::getMany($builder); return $r; } /** * @return \LaminimCMS\Instances\Page|null */ public static function getOne(Query $builder = null) { /** @var \LaminimCMS\Instances\Page */ $r = parent::getOne($builder); return $r; } /** @return \LaminimCMS\Generated\PageQueryBuilder */ public static function getQueryCaller() { /** * @var \LaminimCMS\Generated\PageQueryBuilder $builder */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE); return $builder; } /** @return \LaminimCMS\Generated\PageQueryBuilder */ public static function getFilteredQueryCaller(array $data, array $processRules = null, array $filterRules = null) { /** * @var \LaminimCMS\Generated\PageQueryBuilder $caller */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE, $data, $processRules, $filterRules); return $builder; } /** * @return \LaminimCMS\Instances\Page[] */ public static function getPage(int $page, Query $builder = null): array { /** @var \LaminimCMS\Instances\Page[] */ $r = parent::getPage($page, $builder); return $r; } }