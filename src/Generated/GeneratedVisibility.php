<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\Query; use Lkt\Factory\Instantiator\Instantiator; class GeneratedVisibility extends \Lkt\Factory\Instantiator\Instances\AbstractInstance { const GENERATED_TYPE = 'lmm-visibility'; const COMPONENT = 'lmm-visibility'; public function getId() :int { return $this->_getIntegerVal('id'); } public function hasId() :bool { return $this->_hasIntegerVal('id'); } /** @return \LaminimCMS\Instances\Visibility */ public function setId(int $id) { $this->_setIntegerVal('id', $id); return $this; } public function getCreatedAt(): ?\Carbon\Carbon { return $this->_getDateTimeVal('createdAt'); } public function getCreatedAtFormatted(string $format = null) :string { return $this->_getDateTimeFormattedVal('createdAt', $format); } public function getCreatedAtIntlFormatted(string $format = null) :string { return $this->_getDateTimeFormattedIntlVal('createdAt', $format); } public function hasCreatedAt() :bool { return $this->_hasDateTimeVal('createdAt'); } /** @return \LaminimCMS\Instances\Visibility*/ public function setCreatedAt($createdAt) { $this->_setDateTimeVal('createdAt', $createdAt); return $this; } public function getAutoPublishAt(): ?\Carbon\Carbon { return $this->_getDateTimeVal('autoPublishAt'); } public function getAutoPublishAtFormatted(string $format = null) :string { return $this->_getDateTimeFormattedVal('autoPublishAt', $format); } public function getAutoPublishAtIntlFormatted(string $format = null) :string { return $this->_getDateTimeFormattedIntlVal('autoPublishAt', $format); } public function hasAutoPublishAt() :bool { return $this->_hasDateTimeVal('autoPublishAt'); } /** @return \LaminimCMS\Instances\Visibility*/ public function setAutoPublishAt($autoPublishAt) { $this->_setDateTimeVal('autoPublishAt', $autoPublishAt); return $this; } public function getItemType() :string { return $this->_getStringVal('itemType'); } public function hasItemType() :bool { return $this->_hasStringVal('itemType'); } /** @return \LaminimCMS\Instances\Visibility */ public function setItemType(string $itemType) { $this->_setStringVal('itemType', $itemType); return $this; } public function getItemId(): int { return $this->_getIntegerVal('itemId'); } public function hasItemId() :bool { return $this->_hasIntegerVal('itemId'); } /** @return \LaminimCMS\Instances\Visibility*/ public function setItemId(int $itemId) { $this->_setIntegerVal('itemId', $itemId); return $this; } public function getItem() { return $this->_getForeignVal('', $this->getItemId(), 'item'); } public function hasItem() :bool { return $this->_hasForeignVal('', $this->getItemId(), 'item'); } public function getStatus() :string { return $this->_getStringChoiceVal('status'); } public function hasStatus() :bool { return $this->_hasStringChoiceVal('status'); } public function hasStatusIn(array $values) :bool { return $this->_stringChoiceIn('status', $values); } public function statusIs(string $value) :bool { return $this->_stringChoiceEqual('status', $value); } /** @return \LaminimCMS\Instances\Visibility */ public function setStatus(string $status) { $this->_setStringChoiceVal('status', $status); return $this; } public function statusIsDraft() :bool { return $this->_getStringChoiceVal('status') === 'draft'; } /** @return \LaminimCMS\Instances\Visibility*/ public function setStatusDraft() { $this->_setStringChoiceVal('status', 'draft'); return $this; } public function statusIsPublished() :bool { return $this->_getStringChoiceVal('status') === 'published'; } /** @return \LaminimCMS\Instances\Visibility*/ public function setStatusPublished() { $this->_setStringChoiceVal('status', 'published'); return $this; } public function statusIsScheduled() :bool { return $this->_getStringChoiceVal('status') === 'scheduled'; } /** @return \LaminimCMS\Instances\Visibility*/ public function setStatusScheduled() { $this->_setStringChoiceVal('status', 'scheduled'); return $this; } /** * @return \LaminimCMS\Instances\Visibility[] */ public static function getMany(Query $builder = null): array { /** @var \LaminimCMS\Instances\Visibility[] */ $r = parent::getMany($builder); return $r; } /** * @return \LaminimCMS\Instances\Visibility|null */ public static function getOne(Query $builder = null) { /** @var \LaminimCMS\Instances\Visibility */ $r = parent::getOne($builder); return $r; } /** @return \LaminimCMS\Generated\VisibilityQueryBuilder */ public static function getQueryCaller() { /** * @var \LaminimCMS\Generated\VisibilityQueryBuilder $builder */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE); return $builder; } /** @return \LaminimCMS\Generated\VisibilityQueryBuilder */ public static function getFilteredQueryCaller(array $data, array $processRules = null, array $filterRules = null) { /** * @var \LaminimCMS\Generated\VisibilityQueryBuilder $caller */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE, $data, $processRules, $filterRules); return $builder; } /** * @return \LaminimCMS\Instances\Visibility[] */ public static function getPage(int $page, Query $builder = null): array { /** @var \LaminimCMS\Instances\Visibility[] */ $r = parent::getPage($page, $builder); return $r; } }