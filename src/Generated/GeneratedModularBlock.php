<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\Where; use Lkt\QueryBuilding\Query; use Lkt\Factory\Instantiator\Instantiator; class GeneratedModularBlock extends \Lkt\Factory\Instantiator\Instances\AbstractInstance { const GENERATED_TYPE = 'lmm-modular-block'; const COMPONENT = 'lmm-modular-block'; public function getId() :int { return $this->_getIntegerVal('id'); } public function hasId() :bool { return $this->_hasIntegerVal('id'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setId(int $id) { $this->_setIntegerVal('id', $id); return $this; } public function getCreatedAt(): ?\Carbon\Carbon { return $this->_getDateTimeVal('createdAt'); } public function getCreatedAtFormatted(string $format = null) :string { return $this->_getDateTimeFormattedVal('createdAt', $format); } public function getCreatedAtIntlFormatted(string $format = null) :string { return $this->_getDateTimeFormattedIntlVal('createdAt', $format); } public function hasCreatedAt() :bool { return $this->_hasDateTimeVal('createdAt'); } /** @return \LaminimCMS\Instances\ModularBlock*/ public function setCreatedAt($createdAt) { $this->_setDateTimeVal('createdAt', $createdAt); return $this; } public function getCreatedById(): int { return $this->_getIntegerVal('createdById'); } public function hasCreatedById() :bool { return $this->_hasIntegerVal('createdById'); } /** @return \LaminimCMS\Instances\ModularBlock*/ public function setCreatedById(int $createdById) { $this->_setIntegerVal('createdById', $createdById); return $this; } /** @return \LaminimCMS\Instances\User*/ public function getCreatedBy() :?\LaminimCMS\Instances\User { return $this->_getForeignVal('lmm-user', $this->getCreatedById(), 'createdBy'); } public function hasCreatedBy() :bool { return $this->_hasForeignVal('lmm-user', $this->getCreatedById(), 'createdBy'); } public function getComponent() :string { return $this->_getStringVal('component'); } public function hasComponent() :bool { return $this->_hasStringVal('component'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setComponent(string $component) { $this->_setStringVal('component', $component); return $this; } public function getContent() :string { return $this->_getStringVal('content'); } public function hasContent() :bool { return $this->_hasStringVal('content'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setContent(string $content) { $this->_setStringVal('content', $content); return $this; } public function getTitle() :string { return $this->_getStringVal('title'); } public function hasTitle() :bool { return $this->_hasStringVal('title'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setTitle(string $title) { $this->_setStringVal('title', $title); return $this; } public function getType() :string { return $this->_getStringVal('type'); } public function hasType() :bool { return $this->_hasStringVal('type'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setType(string $type) { $this->_setStringVal('type', $type); return $this; } public function getElementId() :string { return $this->_getStringVal('elementId'); } public function hasElementId() :bool { return $this->_hasStringVal('elementId'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setElementId(string $elementId) { $this->_setStringVal('elementId', $elementId); return $this; } public function getItemType() :string { return $this->_getStringVal('itemType'); } public function hasItemType() :bool { return $this->_hasStringVal('itemType'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setItemType(string $itemType) { $this->_setStringVal('itemType', $itemType); return $this; } public function getItemId(): int { return $this->_getIntegerVal('itemId'); } public function hasItemId() :bool { return $this->_hasIntegerVal('itemId'); } /** @return \LaminimCMS\Instances\ModularBlock*/ public function setItemId(int $itemId) { $this->_setIntegerVal('itemId', $itemId); return $this; } public function getItem() { return $this->_getForeignVal('', $this->getItemId(), 'item'); } public function hasItem() :bool { return $this->_hasForeignVal('', $this->getItemId(), 'item'); } public function getItems(): string { return $this->_getForeignListVal('items'); } public function hasItems() :bool { return $this->_hasForeignListVal('items'); } /** @return \LaminimCMS\Instances\ModularBlock*/ public function setItems($items) { $this->_setForeignListVal('items', $items); return $this; } /** @return \LaminimCMS\Instances\ModularBlock*/ public function removeItemsIds(array $ids) { $this->_removeForeignListIds('items', $ids); return $this; } /** */ public function getItemsData() :array { return $this->_getForeignListData('items'); } public function getItemsIds() :array { return $this->_getForeignListIds('items'); } public function getClassName() :string { return $this->_getStringVal('className'); } public function hasClassName() :bool { return $this->_hasStringVal('className'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setClassName(string $className) { $this->_setStringVal('className', $className); return $this; } public function getIcon() :string { return $this->_getStringVal('icon'); } public function hasIcon() :bool { return $this->_hasStringVal('icon'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setIcon(string $icon) { $this->_setStringVal('icon', $icon); return $this; } public function customTitle() :bool { return $this->_getBooleanVal('customTitle'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setCustomTitle(bool $customTitle) { $this->_setBooleanVal('customTitle', $customTitle); return $this; } public function i18nMode() :bool { return $this->_getBooleanVal('i18nMode'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setI18nMode(bool $i18nMode) { $this->_setBooleanVal('i18nMode', $i18nMode); return $this; } public function hiddenTitle() :bool { return $this->_getBooleanVal('hiddenTitle'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setHiddenTitle(bool $hiddenTitle) { $this->_setBooleanVal('hiddenTitle', $hiddenTitle); return $this; } public function getI18nTitle() :string { return $this->_getStringVal('i18nTitle'); } public function hasI18nTitle() :bool { return $this->_hasStringVal('i18nTitle'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setI18nTitle(string $i18nTitle) { $this->_setStringVal('i18nTitle', $i18nTitle); return $this; } public function getColumns() :int { return $this->_getIntegerVal('columns'); } public function hasColumns() :bool { return $this->_hasIntegerVal('columns'); } /** @return \LaminimCMS\Instances\ModularBlock */ public function setColumns(int $columns) { $this->_setIntegerVal('columns', $columns); return $this; } public function getConfig() :?array { return $this->_getJsonVal('config'); } /** @return \LaminimCMS\Instances\ModularBlock*/ public function setConfig(array $config) { $this->_setJsonVal('config', $config); return $this; } public function hasConfig() :bool { return $this->_hasJsonVal('config'); } public function getBlocks(): string { return $this->_getForeignListVal('blocks'); } public function hasBlocks() :bool { return $this->_hasForeignListVal('blocks'); } /** @return \LaminimCMS\Instances\ModularBlock*/ public function setBlocks($blocks) { $this->_setForeignListVal('blocks', $blocks); return $this; } /** @return \LaminimCMS\Instances\ModularBlock*/ public function removeBlocksIds(array $ids) { $this->_removeForeignListIds('blocks', $ids); return $this; } /** @return \LaminimCMS\Instances\ModularBlock[]*/ public function getBlocksData() :array { return $this->_getForeignListData('blocks'); } public function getBlocksIds() :array { return $this->_getForeignListIds('blocks'); } /** * @return \LaminimCMS\Instances\ModularBlock[] */ public static function getMany(Query $builder = null): array { /** @var \LaminimCMS\Instances\ModularBlock[] */ $r = parent::getMany($builder); return $r; } /** * @return \LaminimCMS\Instances\ModularBlock|null */ public static function getOne(Query $builder = null) { /** @var \LaminimCMS\Instances\ModularBlock */ $r = parent::getOne($builder); return $r; } /** @return \LaminimCMS\Generated\ModularBlockQueryBuilder */ public static function getQueryCaller() { /** * @var \LaminimCMS\Generated\ModularBlockQueryBuilder $builder */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE); return $builder; } /** @return \LaminimCMS\Generated\ModularBlockQueryBuilder */ public static function getFilteredQueryCaller(array $data, array $processRules = null, array $filterRules = null) { /** * @var \LaminimCMS\Generated\ModularBlockQueryBuilder $caller */ list($builder) = Instantiator::getCustomQueryCaller(static::GENERATED_TYPE, $data, $processRules, $filterRules); return $builder; } /** * @return \LaminimCMS\Instances\ModularBlock[] */ public static function getPage(int $page, Query $builder = null): array { /** @var \LaminimCMS\Instances\ModularBlock[] */ $r = parent::getPage($page, $builder); return $r; } }