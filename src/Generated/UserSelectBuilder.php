<?php  namespace LaminimCMS\Generated; use Lkt\QueryBuilding\SelectBuilder; class UserSelectBuilder extends SelectBuilder { const COMPONENT = 'lmm-user'; const columnId = 'id'; public function andId(?string $as = null): static { return $this->andDatum('id', $as); } public static function id(?string $as = null): static { return static::datum('id', $as); } public function andCountId(?string $as = null): static { return $this->andCountDatum('id', $as); } public static function countId(?string $as = null): static { return static::countDatum('id', $as); } const columnCreatedAt = 'created_at'; public function andCreatedAt(?string $as = null): static { return $this->andDatum('created_at', $as); } public static function createdAt(?string $as = null): static { return static::datum('created_at', $as); } public function andCountCreatedAt(?string $as = null): static { return $this->andCountDatum('created_at', $as); } public static function countCreatedAt(?string $as = null): static { return static::countDatum('created_at', $as); } public function andYearCreatedAt(?string $as = null): static { return $this->andYearDatum('created_at', $as); } public static function yearCreatedAt(?string $as = null): static { return static::yearDatum('created_at', $as); } public function andMonthCreatedAt(?string $as = null): static { return $this->andMonthDatum('created_at', $as); } public static function monthCreatedAt(?string $as = null): static { return static::monthDatum('created_at', $as); } const columnCreatedBy = 'created_by'; public function andCreatedBy(?string $as = null): static { return $this->andDatum('created_by', $as); } public static function createdBy(?string $as = null): static { return static::datum('created_by', $as); } public function andCountCreatedBy(?string $as = null): static { return $this->andCountDatum('created_by', $as); } public static function countCreatedBy(?string $as = null): static { return static::countDatum('created_by', $as); } const columnName = 'name'; public function andName(?string $as = null): static { return $this->andDatum('name', $as); } public static function name(?string $as = null): static { return static::datum('name', $as); } public function andCountName(?string $as = null): static { return $this->andCountDatum('name', $as); } public static function countName(?string $as = null): static { return static::countDatum('name', $as); } const columnLastName = 'lastname'; public function andLastName(?string $as = null): static { return $this->andDatum('lastname', $as); } public static function lastName(?string $as = null): static { return static::datum('lastname', $as); } public function andCountLastName(?string $as = null): static { return $this->andCountDatum('lastname', $as); } public static function countLastName(?string $as = null): static { return static::countDatum('lastname', $as); } const columnEmail = 'email'; public function andEmail(?string $as = null): static { return $this->andDatum('email', $as); } public static function email(?string $as = null): static { return static::datum('email', $as); } public function andCountEmail(?string $as = null): static { return $this->andCountDatum('email', $as); } public static function countEmail(?string $as = null): static { return static::countDatum('email', $as); } const columnPassword = 'password'; public function andPassword(?string $as = null): static { return $this->andDatum('password', $as); } public static function password(?string $as = null): static { return static::datum('password', $as); } public function andCountPassword(?string $as = null): static { return $this->andCountDatum('password', $as); } public static function countPassword(?string $as = null): static { return static::countDatum('password', $as); } const columnHasCustomPermissionsEnabled = 'has_custom_permissions'; public function andHasCustomPermissionsEnabled(?string $as = null): static { return $this->andDatum('has_custom_permissions', $as); } public static function hasCustomPermissionsEnabled(?string $as = null): static { return static::datum('has_custom_permissions', $as); } public function andCountHasCustomPermissionsEnabled(?string $as = null): static { return $this->andCountDatum('has_custom_permissions', $as); } public static function countHasCustomPermissionsEnabled(?string $as = null): static { return static::countDatum('has_custom_permissions', $as); } const columnAssignedRoles = 'assigned_roles'; public function andAssignedRoles(?string $as = null): static { return $this->andDatum('assigned_roles', $as); } public static function assignedRoles(?string $as = null): static { return static::datum('assigned_roles', $as); } public function andCountAssignedRoles(?string $as = null): static { return $this->andCountDatum('assigned_roles', $as); } public static function countAssignedRoles(?string $as = null): static { return static::countDatum('assigned_roles', $as); } }